ext {
    compileSdkVersion = 28
}// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        jcenter()
        google()
        mavenCentral()
      maven {

           url 'https://maven.fabric.io/public'
      }

        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
        maven { url "http://oss.jfrog.org/oss-snapshot-local/" }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.3'
        classpath 'com.github.xfumihiro.view-inspector:view-inspector-plugin:0.1.1'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.4'
        classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:4.0.0'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.3.0'
         classpath 'com.google.android.libraries.places:places:2.4.0'
     //  classpath 'io.fabric.tools:gradle:1.26.1'
        classpath 'com.google.gms:google-services:4.2.0'
//https://mvnrepository.com/artifact/com.android.support/support-content
        //noinspection GradleCompatible


        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        maven { url "https://jitpack.io" }
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
        maven { url "http://oss.jfrog.org/oss-snapshot-local/" }
     //   maven { url "https://maven.google.com"}

        jcenter()
        google()
        mavenLocal()
        mavenCentral()

    }
}


    // See https://stackoverflow.com/a/42718231/82609
    project.configurations.all {
        resolutionStrategy.eachDependency { details ->
            if (details.requested.group == 'com.android.support'
                    && !details.requested.name.contains('multidex')) {
                details.useVersion "$support_libraries"
            }
        }
    }



    task clean(type: Delete) {
        delete rootProject.buildDir
    }
